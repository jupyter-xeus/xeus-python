name: CI

on:
  workflow_dispatch:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master

defaults:
  run:
    shell: bash -l {0}


jobs:
  test-unix:

    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-18.04, ubuntu-20.04, macos-10.15, macos-11]
        static: [true, false]

    steps:
      - uses: actions/checkout@v2

      - name: Get number of CPU cores
        uses: SimenB/github-actions-cpu-cores@v1

      - name: install mamba
        uses: mamba-org/provision-with-micromamba@main
        with:
          environment-file: environment-dev.yml
          environment-name: xeus-python

      - name: Make build directory
        run: mkdir build

      - name: Static build option
        if: matrix.static
        run: CMAKE_EXTRA_ARGS="$CMAKE_EXTRA_ARGS -DXPYT_BUILD_SHARED=OFF -DXPYT_USE_SHARED_XEUS_PYTHON=OFF"

      - name: cmake configure
        run: |
          cmake .. \
            -D CMAKE_PREFIX_PATH=$CONDA_PREFIX \
            -D CMAKE_INSTALL_PREFIX=$CONDA_PREFIX \
            -D CMAKE_INSTALL_LIBDIR=lib \
            -D PYTHON_EXECUTABLE=`which python` \
            -D XPYT_DOWNLOAD_GTEST=ON \
            -D CMAKE_C_COMPILER=$CC \
            -D CMAKE_CXX_COMPILER=$CXX \
            ${CMAKE_EXTRA_ARGS}
        working-directory: build

      - name: Install
        run: make -j ${{ steps.cpu-cores.outputs.count }} install
        working-directory: build

      - name: Print version
        run: xpython --version

      # - name: Test xeus-python C++
      #   run: ./test_xeus_python
      #   timeout-minutes: 4
      #   working-directory: build/test

      - name: Test xeus-python Python
        run: pytest . -vvv

  test-win:

    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [windows-2019, windows-2022]

    steps:
      - uses: actions/checkout@v2

      - name: install mamba
        uses: mamba-org/provision-with-micromamba@main
        with:
          environment-file: environment-dev.yml
          environment-name: xeus-python

      - name: Make build directory
        run: mkdir build

      - name: cmake configure
        shell: cmd /C call {0}
        run: |
          micromamba activate xeus-python
          cmake .. ^
            -G "NMake Makefiles" ^
            -DCMAKE_BUILD_TYPE=Release ^
            -DXPYT_DOWNLOAD_GTEST=ON ^
            -DCMAKE_INSTALL_PREFIX="%CONDA_PREFIX%\Library" ^
            -DXEXTRA_JUPYTER_DATA_DIR=%CONDA_PREFIX%\share\jupyter ^
            -DXPYT_BUILD_XPYTHON_EXTENSION=ON ^
            -DXEUS_PYTHONHOME_RELPATH=..\\ ^
            -Dgtest_force_shared_crt=ON ^
            -DCMAKE_CXX_FLAGS=/D_SILENCE_TR1_NAMESPACE_DEPRECATION_WARNING
        working-directory: build

      - name: build
        shell: cmd /C call {0}
        run: |
          micromamba activate xeus-python
          set CL=/MP
          nmake install
        working-directory: build

      # - name: Test xeus-python C++
      #   shell: cmd /C call {0}
      #   run: |
      #     micromamba activate xeus-python
      #     test_xeus_python
      #   timeout-minutes: 4
      #   working-directory: build/test

      - name: Test xeus-python Python
        shell: cmd /C call {0}
        run: |
          micromamba activate xeus-python
          pytest . -vvv

  test-wasm:

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        emsdk_ver: ["3.1.2"]

    steps:
      - uses: actions/checkout@v2

      - name: Get number of CPU cores
        uses: SimenB/github-actions-cpu-cores@v1

      - name: Install mamba
        uses: mamba-org/provision-with-micromamba@main
        with:
          environment-file: environment-dev-wasm.yml
          environment-name: xeus-python-wasm
          micromamba-version: "0.22.0"

      - name: Setup emsdk
        run: |
          micromamba activate xeus-python-wasm
          emsdk install ${{matrix.emsdk_ver}}

      - name: Build and pack xeus-python
        run: |
          micromamba activate xeus-python-wasm

          emsdk activate ${{matrix.emsdk_ver}}
          source $CONDA_EMSDK_DIR/emsdk_env.sh

          micromamba create -n xeus-python-build-wasm \
            --platform=emscripten-32 \
            -c https://repo.mamba.pm/emscripten-forge \
            -c https://repo.mamba.pm/conda-forge \
            --yes \
            python ipython pybind11 jedi xtl nlohmann_json pybind11_json numpy xeus "xeus-python-shell>=0.5" "pyjs>=0.7.0,<0.8" "wasm_requests>=0.1.5"

          mkdir build
          pushd build

          export PREFIX=$MAMBA_ROOT_PREFIX/envs/xeus-python-build-wasm
          export CMAKE_PREFIX_PATH=$PREFIX
          export CMAKE_SYSTEM_PREFIX_PATH=$PREFIX

          emcmake cmake \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_FIND_ROOT_PATH_MODE_PACKAGE=ON \
            -DXPYT_EMSCRIPTEN_WASM_BUILD=ON \
            ..

          make -j5

          empack pack python core $MAMBA_ROOT_PREFIX/envs/xeus-python-build-wasm --version=3.10

          popd

          # Patch output
          python wasm_patches/patch_it.py
